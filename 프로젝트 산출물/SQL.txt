-- FK걸때 ON DELETE CASCADE 추가!!
CREATE SEQUENCE SEQ;

--Member
CREATE TABLE MEMBER (
	MEMBERID	VARCHAR2(200)	NOT NULL,
	MEMBERPW	VARCHAR2(200)	NULL,
	MEMBEREMAIL	VARCHAR2(200)	NULL,
	MEMBERPHONE	VARCHAR2(200)	NULL,
	MEMBERADDRESS	VARCHAR2(200)	NULL,
	MEMBERHIT	NUMBER	NULL,
	MEMBERROLE	VARCHAR2(200)	NULL
);

ALTER TABLE MEMBER ADD CONSTRAINT PK_MEMBER PRIMARY KEY (
	MEMBERID
);
----------------------------------------------------------------

--Inquiry
CREATE TABLE INQUIRY (
	INQUIRYNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	INQUIRYTITLE	VARCHAR2(200)	NULL,
	INQUIRYDETAIL	CLOB	NULL,
	INQUIRYCATEGORY	VARCHAR2(200)	NULL
);

ALTER TABLE INQUIRY ADD CONSTRAINT PK_INQUIRY PRIMARY KEY (
	INQUIRYNUM
);

ALTER TABLE INQUIRY ADD CONSTRAINT FK_MEMBER_TO_INQUIRY_1 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

-------------------------------------------------------------

--InqComments
CREATE TABLE INQCOMMENTS (
	INQCOMMENTSNUM	NUMBER	NOT NULL,
	INQUIRYNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	INQCOMMENTSCONTENTS	VARCHAR2(4000)	NULL
);

ALTER TABLE INQCOMMENTS ADD CONSTRAINT PK_INQCOMMENTS PRIMARY KEY (
	INQUIRYNUM
);

ALTER TABLE INQCOMMENTS ADD CONSTRAINT FK_INQUIRY_TO_INQCOMMENTS_1 FOREIGN KEY (
	MEMBERID 
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

ALTER TABLE INQCOMMENTS ADD CONSTRAINT FK_INQUIRY_TO_INQCOMMENTS_2 FOREIGN KEY (
	INQUIRYNUM 
)
REFERENCES INQUIRY (
	INQUIRYNUM
)ON DELETE CASCADE;

---------------------------------------------------------

--Pay
CREATE TABLE PAY (
	merchantUid	VARCHAR2(200)	NOT NULL,
	memberId	VARCHAR2(200)	NOT NULL,
	impUid	VARCHAR2(200)	NULL,
	productTitle	VARCHAR2(200)	NULL,
	productNums	VARCHAR2(4000)	NULL,
	payDate	DATE	NULL
);

ALTER TABLE PAY ADD CONSTRAINT PK_PAY PRIMARY KEY (
	merchantUid
);

ALTER TABLE PAY ADD CONSTRAINT FK_MEMBER_TO_PAY_1 FOREIGN KEY (
	memberId
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

-----------------------------------------------------------------

--NOTIFY
CREATE TABLE NOTIFY (
	NOTIFYNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	NOTIFYMESSAGE	VARCHAR2(200)	NULL,
	NOTIFYDATE	DATE	NULL
);

ALTER TABLE NOTIFY ADD CONSTRAINT PK_NOTIFY PRIMARY KEY (
	NOTIFYNUM
);

ALTER TABLE NOTIFY ADD CONSTRAINT FK_MEMBER_TO_NOTIFY_1 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

---------------------------------------------------------

--NOTICE
CREATE TABLE NOTICE (
	noticeNum	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	noticeTitle	VARCHAR2(200)	NULL,
	noticeContents	CLOB	NULL,
	noticeDate	DATE	NULL,
	noticeHit	NUMBER	NULL
);

ALTER TABLE NOTICE ADD CONSTRAINT PK_NOTICE PRIMARY KEY (
	noticeNum
);

ALTER TABLE NOTICE ADD CONSTRAINT FK_MEMBER_TO_NOTICE_1 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

---------------------------------------------------------

--Board
CREATE TABLE BOARD (
	BOARDNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	BOARDTITLE	VARCHAR2(200)	NULL,
	BOARDCONTENTS	CLOB	NULL,
	BOARDPRICE	VARCHAR2(200)	NULL,
	BOARDDATE	DATE	NULL,
	BOARDHIT	NUMBER	NULL,
	BOARDSTATE	VARCHAR2(200)	NULL,
	BOARDCATEGORY	VARCHAR2(200)	NULL
);

ALTER TABLE BOARD ADD CONSTRAINT PK_BOARD PRIMARY KEY (
	BOARDNUM
);

ALTER TABLE BOARD ADD CONSTRAINT FK_MEMBER_TO_BOARD_1 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

------------------------------------------------------------------

--Comments
CREATE TABLE COMMENTS (
	COMMENTSNUM	NUMBER	NOT NULL,
	BOARDNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	COMMENTSCONTENTS	CLOB	NULL,
	COMMENTSREGDATE	DATE	NULL
);

ALTER TABLE COMMENTS ADD CONSTRAINT PK_COMMENTS PRIMARY KEY (
	COMMENTSNUM
);

ALTER TABLE COMMENTS ADD CONSTRAINT FK_BOARD_TO_COMMENTS_1 FOREIGN KEY (
	BOARDNUM
)
REFERENCES BOARD (
	BOARDNUM
)ON DELETE CASCADE;

ALTER TABLE COMMENTS ADD CONSTRAINT FK_BOARD_TO_COMMENTS_2 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

------------------------------------------------------------------

--CommentsReply
CREATE TABLE COMMENTSREPLY (
	REPLYNUM	NUMBER	NOT NULL,
	COMMENTSNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	REPLYCONTENTS	VARCHAR2(200)	NULL,
	REPLYREGDATE	DATE	NULL
);

ALTER TABLE COMMENTSREPLY ADD CONSTRAINT PK_COMMENTSREPLY PRIMARY KEY (
	REPLYNUM
);

ALTER TABLE COMMENTSREPLY ADD CONSTRAINT FK_COMMENTS_TO_COMMENTSREPLY_1 FOREIGN KEY (
	COMMENTSNUM
)
REFERENCES COMMENTS (
	COMMENTSNUM
)ON DELETE CASCADE;

ALTER TABLE COMMENTSREPLY ADD CONSTRAINT FK_COMMENTS_TO_COMMENTSREPLY_2 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

---------------------------------------------------------------

--BoardPic
CREATE TABLE BOARDPIC (
	BOARDNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL
);

ALTER TABLE BOARDPIC ADD CONSTRAINT FK_BOARD_TO_BOARDPIC_1 FOREIGN KEY (
	BOARDNUM
)
REFERENCES BOARD (
	BOARDNUM
)ON DELETE CASCADE;

ALTER TABLE BOARDPIC ADD CONSTRAINT FK_BOARD_TO_BOARDPIC_2 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

--------------------------------------------------------------

--BOARDIMG
CREATE TABLE BOARDIMG (
	FILENUM	NUMBER	NOT NULL,
	BOARDNUM	NUMBER	NOT NULL,
	FILENAME	VARCHAR2(200)	NULL,
	ORINMAE	VARCHAR2(200)	NULL
);

ALTER TABLE BOARDIMG ADD CONSTRAINT PK_BOARDIMG PRIMARY KEY (
	FILENUM
);

ALTER TABLE BOARDIMG ADD CONSTRAINT FK_BOARD_TO_BOARDIMG_1 FOREIGN KEY (
	BOARDNUM
)
REFERENCES BOARD (
	BOARDNUM
)ON DELETE CASCADE;

---------------------------------------------------------

--Product
CREATE TABLE PRODUCT (
	PRODUCTNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	PRODUCTTITLE	VARCHAR2(200)	NULL,
	PRODUCTPRICE	VARCHAR2(200)	NULL,
	PRODUCTDETAIL	CLOB	NULL,
	PRODUCTCATEGORY	VARCHAR2(200)	NULL,
	PRODUCTQ	VARCHAR2(200)	NULL,
	PRODUCTIMGNAME	VARCHAR2(200)	NULL,
	PRODUCTHIT	NUMBER	NULL,
	state	NUMBER	NULL
);

ALTER TABLE PRODUCT ADD CONSTRAINT PK_PRODUCT PRIMARY KEY (
	PRODUCTNUM
);

ALTER TABLE PRODUCT ADD CONSTRAINT FK_MEMBER_TO_PRODUCT_1 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

-----------------------------------------------------------------

--ProductPic
CREATE TABLE PRODUCTPIC (
	PRODUCTNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL
);

ALTER TABLE PRODUCTPIC ADD CONSTRAINT FK_PRODUCT_TO_PRODUCTPIC_1 FOREIGN KEY (
	PRODUCTNUM
)
REFERENCES PRODUCT (
	PRODUCTNUM
)ON DELETE CASCADE;

ALTER TABLE PRODUCTPIC ADD CONSTRAINT FK_PRODUCT_TO_PRODUCTPIC_2 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

----------------------------------------------------------------

--Review
CREATE TABLE REVIEW (
	REVIEWNUM	NUMBER	NOT NULL,
	PRODUCTNUM	NUMBER	NOT NULL,
	MEMBERID	VARCHAR2(200)	NOT NULL,
	REVIEWCONTENTS	CLOB	NULL,
	REVIEWSCORE	NUMBER	NULL
);

ALTER TABLE REVIEW ADD CONSTRAINT PK_REVIEW PRIMARY KEY (
	REVIEWNUM
);

ALTER TABLE REVIEW ADD CONSTRAINT FK_PRODUCT_TO_REVIEW_1 FOREIGN KEY (
	PRODUCTNUM
)
REFERENCES PRODUCT (
	PRODUCTNUM
)ON DELETE CASCADE;

ALTER TABLE REVIEW ADD CONSTRAINT FK_PRODUCT_TO_REVIEW_2 FOREIGN KEY (
	MEMBERID
)
REFERENCES MEMBER (
	MEMBERID
)ON DELETE CASCADE;

--------------------------------------------------------------

--Room
CREATE TABLE Room (
	roomNum	NUMBER	NOT NULL,
	roomTitle	VARCHAR2(200)	NULL
);

ALTER TABLE Room ADD CONSTRAINT PK_ROOM PRIMARY KEY (
	roomNum
);

---------------------------------------------------------

--message
CREATE TABLE message (
	messageNum	NUMBER	NOT NULL,
	roomNum	NUMBER	NOT NULL,
	sendId	VARCHAR2(200)	NULL,
	receiveId	VARCHAR2(200)	NULL,
	contents	VARCHAR2(200)	NULL,
	sendDate	DATE	NULL,
	isRead	NUMBER	NULL
);

ALTER TABLE message ADD CONSTRAINT PK_MESSAGE PRIMARY KEY (
	messageNum
);

ALTER TABLE message ADD CONSTRAINT FK_Room_TO_message_1 FOREIGN KEY (
	roomNum
)
REFERENCES Room (
	roomNum
)ON DELETE CASCADE;

---------------------------------------------------------

--EVENT
CREATE TABLE EVENT (
	eventNum	NUMBER	NOT NULL,
	fileName	VARCHAR2(200)	NULL,
	oriName	VARCHAR2(200)	NULL
);

ALTER TABLE EVENT ADD CONSTRAINT PK_EVENT PRIMARY KEY (
	eventNum
);

---------------------------------------------------------

COMMIT;
