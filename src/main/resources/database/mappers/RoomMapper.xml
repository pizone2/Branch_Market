<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
 <mapper namespace="com.main.branch.chat.RoomDAO">
 	
 	<select id="getRoomList" parameterType="Pager" resultType="RoomDTO">
 		SELECT A.roomNum,A.roomTitle FROM ROOM A
		JOIN MESSAGE B ON A.roomNum = B.roomNum AND B.ISREAD = -1
		GROUP BY A.roomNum,A.roomTitle HAVING A.roomTitle LIKE '%' || #{search} || '%'
 	</select>
 	<select id="getRoomMessageList" parameterType="MessageDTO" resultType="MessageDTO">
 		SELECT * FROM MESSAGE WHERE roomNum = #{roomNum} and (isRead = 0 OR isRead = 1) and receiveId = #{receiveId}
 		ORDER BY sendDate
 	</select>
 	<select id="getMyRoomList" parameterType="MemberDTO" resultType="RoomDTO">
 		SELECT * FROM MESSAGE M
 			JOIN ROOM R ON M.roomNum = R.roomNum 
	 		WHERE M.roomNum IN (
		 		SELECT distinct(roomNum) FROM ROOM 
		 		WHERE roomTitle LIKE '%' || #{search} || '%'
	 		) 
 			AND (M.sendId = #{memberId} OR M.receiveId = #{memberId}) 
			AND (M.isRead = -1 OR M.isRead = -3)
 	</select>
 	
 	<select id="getRoomParticipantsList" parameterType="RoomDTO" resultType="MessageDTO">
 		SELECT distinct(sendId) FROM MESSAGE WHERE roomNum = #{roomNum} and (isRead = -2 or isRead = -1)
 	</select>
 	
 	<select id="getRoomDetail" parameterType="RoomDTO" resultType="RoomDTO">
 		SELECT * FROM ROOM WHERE roomNum = #{roomNum}
 	</select>
 	<insert id="setRoomAdd" parameterType="RoomDTO">
 		<selectKey order="BEFORE" keyProperty="roomNum" resultType="Integer">
 			SELECT SEQ.NEXTVAL FROM DUAL
 		</selectKey>
 		INSERT INTO ROOM VALUES(#{roomNum},#{roomTitle})
 	</insert>
 	
 	<insert id="setRoomMessageAdd" parameterType="MessageDTO">
 		INSERT INTO MESSAGE VALUES(SEQ.NEXTVAL,#{roomNum},#{sendId},#{receiveId},#{contents},SYSDATE,#{isRead})
 	</insert>
 	
	<select id="setOneToOneChat" parameterType="MessageDTO" resultType="RoomDTO">
 		SELECT roomNum FROM MESSAGE WHERE 
 		((sendId = #{sendId} AND receiveId = #{receiveId})
 			OR
 		(sendId = #{receiveId} AND receiveId = #{sendId}))
 			AND
 		isRead = -3
 	</select>
 	<select id="checkAlreadyParticipant" parameterType="MessageDTO" resultType="MessageDTO">
 		SELECT * FROM MESSAGE WHERE roomNum = #{roomNum} AND sendId = #{sendId} AND (isRead = -1 OR isRead = -2)
 	</select>
 	
 	<delete id="delRecordMessage" parameterType="MessageDTO">
 		DELETE MESSAGE 
 		WHERE roomNum = #{roomNum} AND (isRead = 0 OR isRead = 1) AND receiveId = #{receiveId}
 	</delete>
 	<delete id="setQuitRoom" parameterType="MessageDTO">
 		DELETE MESSAGE
 		WHERE roomNum = #{roomNum} AND ((isRead = -1) AND sendId = #{sendId})
 	</delete>
 	<select id="checkRoomMember" parameterType="MessageDTO" resultType="MessageDTO">
 		SELECT * FROM MESSAGE WHERE roomNum = #{roomNum} AND sendId = #{sendId} AND isRead = #{isRead}
 	</select>
 	<select id="checkOneToOneChat" parameterType="MessageDTO" resultType="MessageDTO">
 		SELECT * FROM MESSAGE WHERE roomNum = #{roomNum} AND isRead = -3
 	</select>
 	<select id="checkParticipantOneChat" parameterType="MessageDTO" resultType="MessageDTO">
 		SELECT * FROM MESSAGE 
 		WHERE roomNum = #{roomNum} AND isRead = -3 AND (sendId = #{sendId} OR receiveId = #{sendId})
 	</select>
 	
 	<update id="updateMemberRead" parameterType="MessageDTO">
 		UPDATE MESSAGE SET isRead = 1 WHERE isRead = 0 AND receiveId = #{receiveId} AND roomNum = #{roomNum}
 	</update>
 	<select id="getUnreadMessageCnt" parameterType="MessageDTO" resultType="Integer">
 		SELECT COUNT(*) FROM MESSAGE WHERE isRead = 0 AND receiveId = #{receiveId} AND roomNum = #{roomNum}
 	</select>
 	
 	<select id="getTotalUnreadMessageCnt" parameterType="MessageDTO" resultType="Integer">
 		SELECT COUNT(*) FROM MESSAGE WHERE isRead = 0 AND receiveId = #{receiveId}
 	</select>
 </mapper>
 
<!--  private Integer messageNum;
	private Integer roomNum;
	private String sendId;
	private String receiveId;
	private String contents;
	private Date sendDate;
	private Integer isRead; -->